import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
t2 = pd.read_csv ("Iris.csv")
t2.head()
t2.tail()
t2['Species'].value_counts()
sns.pairplot(t2, hue='Species')
x = t2 [["SepalLengthCm","SepalWidthCm","PetalLengthCm","PetalWidthCm"]]
y = t2 ["Species"]
print(x)
print(y)
x_train , x_test , y_train , y_test = train_test_split(x , y , test_size=0.2 , random_state=0)
x_train
x_test
ML= KNeighborsClassifier(n_neighbors=10)
ML.fit(x_train,y_train)
x_train_prediction=ML.predict(x_train)
print(x_train_prediction)
print(y_train)
x_test_prediction=ML.predict(x_test)
x_test_prediction
train_accuracy=accuracy_score(x_train_prediction,y_train)
test_accuracy=accuracy_score(x_test_prediction,y_test)
print("Acuuracy score of trianing and test data are:", train_accuracy,"and",test_accur
print("write sepal length")
a=input()
print("write sepal width")
b=input()
print("write petal length")
c=input()
print("write petal width")
d=input()
data=pd.DataFrame({"SepalLengthCm":[a],"SepalWidthCm":[b],"PetalLengthCm":[c],"PetalWidthCm":[d]})
prediction=ML.predict(data)
print("Species is",prediction[0])
